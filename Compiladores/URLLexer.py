# Generated from .//URL.g by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,8,82,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,3,1,34,8,1,1,2,4,2,37,8,2,11,2,12,2,38,1,3,1,3,4,3,
        43,8,3,11,3,12,3,44,1,4,1,4,4,4,49,8,4,11,4,12,4,50,1,4,1,4,4,4,
        55,8,4,11,4,12,4,56,5,4,59,8,4,10,4,12,4,62,9,4,1,5,1,5,4,5,66,8,
        5,11,5,12,5,67,1,6,1,6,4,6,72,8,6,11,6,12,6,73,1,7,4,7,77,8,7,11,
        7,12,7,78,1,7,1,7,0,0,8,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,1,0,6,
        5,0,45,46,48,57,65,90,95,95,97,122,1,0,48,57,4,0,45,58,65,90,95,
        95,97,122,6,0,38,38,45,58,61,61,65,90,95,95,97,122,5,0,38,38,45,
        58,65,90,95,95,97,122,3,0,9,10,13,13,32,32,91,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,1,17,1,0,0,0,3,33,1,0,0,0,5,36,1,0,0,0,7,40,1,0,
        0,0,9,46,1,0,0,0,11,63,1,0,0,0,13,69,1,0,0,0,15,76,1,0,0,0,17,18,
        5,58,0,0,18,19,5,47,0,0,19,20,5,47,0,0,20,2,1,0,0,0,21,22,5,104,
        0,0,22,23,5,116,0,0,23,24,5,116,0,0,24,34,5,112,0,0,25,26,5,104,
        0,0,26,27,5,116,0,0,27,28,5,116,0,0,28,29,5,112,0,0,29,34,5,115,
        0,0,30,31,5,102,0,0,31,32,5,116,0,0,32,34,5,112,0,0,33,21,1,0,0,
        0,33,25,1,0,0,0,33,30,1,0,0,0,34,4,1,0,0,0,35,37,7,0,0,0,36,35,1,
        0,0,0,37,38,1,0,0,0,38,36,1,0,0,0,38,39,1,0,0,0,39,6,1,0,0,0,40,
        42,5,58,0,0,41,43,7,1,0,0,42,41,1,0,0,0,43,44,1,0,0,0,44,42,1,0,
        0,0,44,45,1,0,0,0,45,8,1,0,0,0,46,48,5,47,0,0,47,49,7,2,0,0,48,47,
        1,0,0,0,49,50,1,0,0,0,50,48,1,0,0,0,50,51,1,0,0,0,51,60,1,0,0,0,
        52,54,5,47,0,0,53,55,7,2,0,0,54,53,1,0,0,0,55,56,1,0,0,0,56,54,1,
        0,0,0,56,57,1,0,0,0,57,59,1,0,0,0,58,52,1,0,0,0,59,62,1,0,0,0,60,
        58,1,0,0,0,60,61,1,0,0,0,61,10,1,0,0,0,62,60,1,0,0,0,63,65,5,63,
        0,0,64,66,7,3,0,0,65,64,1,0,0,0,66,67,1,0,0,0,67,65,1,0,0,0,67,68,
        1,0,0,0,68,12,1,0,0,0,69,71,5,35,0,0,70,72,7,4,0,0,71,70,1,0,0,0,
        72,73,1,0,0,0,73,71,1,0,0,0,73,74,1,0,0,0,74,14,1,0,0,0,75,77,7,
        5,0,0,76,75,1,0,0,0,77,78,1,0,0,0,78,76,1,0,0,0,78,79,1,0,0,0,79,
        80,1,0,0,0,80,81,6,7,0,0,81,16,1,0,0,0,10,0,33,38,44,50,56,60,67,
        73,78,1,6,0,0
    ]

class URLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    PROTOCOL = 2
    DOMAIN = 3
    PORT = 4
    PATH = 5
    QUERY = 6
    FRAGMENT = 7
    WS = 8

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'://'" ]

    symbolicNames = [ "<INVALID>",
            "PROTOCOL", "DOMAIN", "PORT", "PATH", "QUERY", "FRAGMENT", "WS" ]

    ruleNames = [ "T__0", "PROTOCOL", "DOMAIN", "PORT", "PATH", "QUERY", 
                  "FRAGMENT", "WS" ]

    grammarFileName = "URL.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


